{"version":3,"file":"static/js/91.7390f99e.chunk.js","mappings":"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","sources":["app/core/apis/practice.js","app/pages/SchedulePage/TablesExam/TablesExam.js","app/pages/SchedulePage/SchedulePage.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js"],"sourcesContent":["import { _get, _post } from \"./apis\";\n\nexport const createPractice = (data) => {\n  return _post(`/api/v1/exam/create-random-session`, data);\n};\n\nexport const createRandomTopicSession = (data) => {\n  return _post(`/api/v1/exam/create-random-topic-session`, data);\n};\n\nexport const getCurrentRandomSession = (type) => {\n  return _get(`/api/v1/exam/current-random-session?type=${type}`);\n};\n","import { SearchOutlined } from \"@ant-design/icons\";\nimport { Card } from \"@themesberg/react-bootstrap\";\nimport { Button, Input, Space, Table, Tag } from \"antd\";\nimport React, { useRef, useState } from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./TableExam.css\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TableExam = ({ data }) => {\n  const history = useHistory();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div\n        style={{\n          padding: 8,\n        }}\n      >\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => clearFilters && handleReset(clearFilters)}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({\n                closeDropdown: false,\n              });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        style={{\n          color: filtered ? \"#1890ff\" : undefined,\n        }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current?.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{\n            backgroundColor: \"#ffc069\",\n            padding: 0,\n          }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"20%\",\n      sorter: (a, b) => a.title < b.title,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(\"title\"),\n    },\n    {\n      title: \"Session\",\n      dataIndex: \"isSessionMorning\",\n      key: \"isSessionMorning\",\n      width: \"5%\",\n      sorter: (a, b) => a.isSessionMorning < b.isSessionMorning,\n      sortDirections: [\"descend\", \"ascend\"],\n      render: (isSessionMorning) => {\n        return <span>{isSessionMorning}</span>;\n      },\n      filters: [\n        {\n          text: \"Morning\",\n          value: \"Morning\",\n        },\n        {\n          text: \"Afternoon\",\n          value: \"Afternoon\",\n        },\n      ],\n      onFilter: (value, record) => record.isSessionMorning.indexOf(value) === 0,\n    },\n    {\n      title: \"Event Date\",\n      dataIndex: \"eventDate\",\n      key: \"eventDate\",\n      width: \"10%\",\n      sorter: (a, b) =>\n        new Date(a.eventDate).toLocaleDateString() <\n        new Date(b.eventDate).toLocaleDateString(),\n      sortDirections: [\"descend\", \"ascend\"],\n      render: (eventDate) => {\n        return <span>{new Date(eventDate).toLocaleDateString()}</span>;\n      },\n      filters: data\n        ?.map((item, index) => ({\n          key: `eventDate${index}`,\n          text: new Date(item.eventDate).getFullYear(),\n          value: new Date(item.eventDate).getFullYear(),\n        }))\n        .filter(\n          (value, index, self) =>\n            self.findIndex((item) => item.value === value.value) === index\n        ),\n      onFilter: (value, record) => record.eventDate.indexOf(value) === 0,\n    },\n    {\n      title: \"Last Updated\",\n      dataIndex: \"updatedAt\",\n      key: \"updatedAt\",\n      width: \"10%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"updatedAt\"),\n      sorter: (a, b) => new Date(a.updatedAt) < new Date(b.updatedAt),\n      sortDirections: [\"descend\", \"ascend\"],\n      render: (updateAt) => {\n        return <span>{new Date(updateAt).toLocaleString()}</span>;\n      },\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      width: \"10%\",\n      align: \"center\",\n      render: (_, record) => {\n        return (\n          <Space size=\"middle\">\n            <Button onClick={() => history.push(`/exams/${record._id}`)}>\n              View Details\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ];\n  return (\n    <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\n      <Card.Body className=\"mt-3\">\n        <Table columns={columns} dataSource={data} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TableExam;\n","import { Button, Container, Modal } from \"@themesberg/react-bootstrap\";\nimport { getAllExam } from \"app/core/apis/exam\";\nimport { createPractice } from \"app/core/apis/practice\";\nimport React, { useEffect, useState } from \"react\";\nimport { Checkbox } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TableExam from \"./TablesExam/TablesExam\";\nconst CheckboxGroup = Checkbox.Group;\n\nconst SchedulePage = () => {\n  const [data, setData] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [pending, setPending] = React.useState(true);\n  const [show, setShow] = useState(false);\n  const [checkedList, setCheckedList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await getAllExam(\"exam\");\n        setData(\n          response?.data?.exam\n            ?.filter((item) => item.isPublic === \"Public\")\n            ?.sort(\n              (a, b) =>\n                new Date(b.eventDate).getTime() -\n                new Date(a.eventDate).getTime()\n            )\n            .map((item, index) => ({\n              ...item,\n              id: item._id,\n              isSessionMorning: item.isSessionMorning ? \"Morning\" : \"Afternoon\",\n            }))\n        );\n        setPending(false);\n      } catch (error) {}\n    })();\n  }, []);\n\n  const onChangeCheckbox = (list) => {\n    setCheckedList(list);\n  };\n\n  const startPraticing = async () => {\n    try {\n      const response = await createPractice({\n        exams: checkedList,\n      });\n      if (response?.data) {\n        history.push(\n          `/exams/${response?.data?.exam?.exam}/attempt?type=normal_practice`\n        );\n      } else {\n        alert(response.error);\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <Container className=\"schedule-container\">\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Mixing Exam Test</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p style={{ color: \"red\" }}>{error}</p>\n            <CheckboxGroup\n              className=\"checkbox-exam-tab1\"\n              value={checkedList}\n              onChange={onChangeCheckbox}\n              options={data?.map((item) => ({\n                label: item.title,\n                value: item._id,\n              }))}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                if (checkedList.length < 2) {\n                  setError(\"You need to choose at least 2 exam\");\n                  return;\n                }\n                startPraticing();\n                handleClose();\n              }}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n      <div className=\"layout-container-top\">\n        <h1 className=\"title text-center mb-4\">FE Certification Examination</h1>\n      </div>\n      <div className=\"layout-container-body\">\n        <TableExam data={data} />\n      </div>\n      <div className=\"d-flex justify-content-center my-4\">\n        <Button onClick={() => handleShow()}>Doing Mixing Exam Tests</Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SchedulePage;\n","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\n\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","// This icon file is generated automatically.\nvar CloseCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\" } }] }, \"name\": \"close-circle\", \"theme\": \"filled\" };\nexport default CloseCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CloseCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleFilled = function CloseCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleFilledSvg\n  }));\n};\n\nCloseCircleFilled.displayName = 'CloseCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleFilled);","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);"],"names":["createPractice","data","_post","createRandomTopicSession","getCurrentRandomSession","type","_get","history","useHistory","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","size","width","handleReset","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","key","sorter","a","b","sortDirections","isSessionMorning","filters","indexOf","Date","eventDate","toLocaleDateString","map","item","index","getFullYear","filter","self","findIndex","align","updatedAt","updateAt","toLocaleString","_","push","_id","Card","border","className","dataSource","CheckboxGroup","Checkbox","setData","React","setPending","show","setShow","checkedList","setCheckedList","error","setError","handleClose","useEffect","getAllExam","response","exam","isPublic","sort","getTime","id","startPraticing","exams","alert","Container","Modal","onHide","closeButton","list","options","label","Button","variant","length","CheckOutlined","props","AntdIcon","_objectSpread","CheckOutlinedSvg","displayName","CloseCircleFilled","CloseCircleFilledSvg","CloseOutlined","CloseOutlinedSvg"],"sourceRoot":""}