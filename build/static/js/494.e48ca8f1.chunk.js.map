{"version":3,"file":"static/js/494.e48ca8f1.chunk.js","mappings":"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","sources":["app/core/apis/user.js","app/pages/ProfilePage/OverviewPage/OverviewPage.js","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","../node_modules/@themesberg/react-bootstrap/lib/esm/CardImg.js","../node_modules/@themesberg/react-bootstrap/lib/esm/Card.js","../node_modules/@themesberg/react-bootstrap/lib/esm/Row.js"],"sourcesContent":["import { _get, _post, _delete, _put } from \"./apis\";\n\n// APIS\nexport const getAllUsers = (data) => {\n  return _get(\"/api/v1/user\");\n};\n\nexport const login = (data) => {\n  return _post(\"/api/v1/user/login\", data);\n};\n\nexport const loginByGoogle = (data) => {\n  return _post(\"/api/v1/user/google_login\", data);\n};\n\nexport const loginByFacebook = (data) => {\n  return _post(\"/api/v1/user/facebook_login\", data);\n};\n\nexport const register = (data) => {\n  return _post(\"/api/v1/user/register\", data);\n};\n\nexport const logout = (data) => {\n  return _post(\"/api/v1/user/logout\", data);\n};\n\nexport const forgotPass = (data) => {\n  return _post(\"/api/v1/user/forgot-password\", data);\n};\n\nexport const resetPass = (data) => {\n  return _post(\"/api/v1/user/reset-password\", data);\n};\n\nexport const deleteUser = (data) => {\n  return _delete(\"/api/v1/user\");\n};\n\nexport const getTopicStatistic = (type) => {\n  return _get(\"/api/v1/exam/topic/statistic?type=\"+type);\n};\n\n","import { faCashRegister, faChartLine } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row } from \"@themesberg/react-bootstrap\";\r\nimport { LineChart } from \"app/components/Chart/Chart\";\r\nimport { CounterWidget, ProgressTrackWidget } from \"app/components/Widgets\";\r\nimport { getTopicStatistic } from \"app/core/apis/user\";\r\nimport { getTimeAndPercentCorrectByID } from \"app/utils/ArrayUtils\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Tabs, Spin } from \"antd\";\r\nimport FakeChart from \"app/assets/fake/chartFakeProfile.PNG\";\r\nimport \"./OverviewPage.css\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst OverviewPage = () => {\r\n  const [examOverview, setExamOverview] = useState(\"\");\r\n  const [historyExam, setHistoryExam] = useState(\"\");\r\n  const [predictNextResult, setPredictNextResult] = useState(\"\");\r\n  const [percentExam, setPercentExam] = useState(\"\");\r\n  const [percentPractice, setPercentPractice] = useState(\"\");\r\n  // const [percentMixingExamTest, setPercentMixingExamTest] = useState(\"\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // const response = await getTopicStatistic(\"normal_practice\");\r\n        const response1 = await getTopicStatistic(\"topic_practice\");\r\n        const response2 = await getTopicStatistic(\"exam\");\r\n        if (response2.status === 200 && response1.status === 200) {\r\n          setExamOverview(response2?.data?.exam);\r\n\r\n          setPercentExam({\r\n            ...response2?.data?.exam,\r\n            topicsList: response2?.data?.exam?.topicsList.map((item, index) => {\r\n              return {\r\n                title: item.title,\r\n                countCorrect: item.totalCorrect,\r\n                percentage:\r\n                  item.totalQuestion !== 0\r\n                    ? parseInt(\r\n                        (\r\n                          (item.totalCorrect / item.totalQuestion) *\r\n                          100\r\n                        ).toFixed(0)\r\n                      )\r\n                    : 0,\r\n                color: \"#\" + Math.floor(Math.random() * 16777215).toString(16),\r\n                total: item.totalQuestion,\r\n                last:\r\n                  index === response2?.data?.exam?.topicsList?.length - 1\r\n                    ? true\r\n                    : false,\r\n              };\r\n            }),\r\n          });\r\n\r\n          setPercentPractice({\r\n            ...response1?.data?.exam,\r\n            topicsList: response1?.data?.exam?.topicsList.map(\r\n              (item, index) => ({\r\n                title: item.title,\r\n                countCorrect: item.totalCorrect,\r\n                percentage:\r\n                  item.totalQuestion !== 0\r\n                    ? parseInt(\r\n                        (\r\n                          (item.totalCorrect / item.totalQuestion) *\r\n                          100\r\n                        ).toFixed(0)\r\n                      )\r\n                    : 0,\r\n                color: \"#\" + Math.floor(Math.random() * 16777215).toString(16),\r\n                total: item.totalQuestion,\r\n                last:\r\n                  index === response1?.data?.exam?.topicsList?.length - 1\r\n                    ? true\r\n                    : false,\r\n              })\r\n            ),\r\n          });\r\n\r\n          // setPercentMixingExamTest({\r\n          //   ...response?.data?.exam,\r\n          //   topicsList: response?.data?.exam?.topicsList.map((item, index) => ({\r\n          //     title: item.title,\r\n          //     countCorrect: item.totalCorrect,\r\n          //     percentage:\r\n          //       item.totalQuestion !== 0\r\n          //         ? parseInt(\r\n          //             ((item.totalCorrect / item.totalQuestion) * 100).toFixed(\r\n          //               0\r\n          //             )\r\n          //           )\r\n          //         : 0,\r\n          //     color: \"#\" + Math.floor(Math.random() * 16777215).toString(16),\r\n          //     total: item.totalQuestion,\r\n          //     last:\r\n          //       index === response?.data?.exam?.topicsList?.length - 1\r\n          //         ? true\r\n          //         : false,\r\n          //   })),\r\n          // });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-md-center mt-4 overview-container-page\">\r\n        <h3 className=\"my-4\">Overview</h3>\r\n        <Spin\r\n          spinning={percentPractice === \"\"}\r\n          className=\"spin-doing-quiz\"\r\n          tip=\"Loading...\"\r\n        >\r\n          {percentPractice !== \"\" && (\r\n            <>\r\n              {historyExam !== \"\" &&\r\n                historyExam !== [] &&\r\n                predictNextResult !== \"\" && (\r\n                  <LineChart\r\n                    {...getTimeAndPercentCorrectByID(\r\n                      historyExam,\r\n                      predictNextResult\r\n                    )}\r\n                    title=\"Result and Prediction\"\r\n                  />\r\n                )}\r\n              {/* <div className=\"d-flex justify-content-center my-4\">\r\n                <img src={FakeChart}></img>\r\n              </div> */}\r\n\r\n              <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Exam statistic\" key=\"1\">\r\n                  <div className=\"statistic-component\">\r\n                    <h2>Exam statistic</h2>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Number of test\"\r\n                          title={percentExam?.totalExams}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Highest score\"\r\n                          title={(percentExam?.maxMark?.maxMark * 100).toFixed(\r\n                            2\r\n                          )}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        /> \r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Lowest score\"\r\n                          title={(percentExam?.minMark?.minMark * 100).toFixed(\r\n                            2\r\n                          )}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Average of score\"\r\n                          title={(percentExam?.avgMark * 100).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <ProgressTrackWidget\r\n                        titleProgress={\"Exam progess track\"}\r\n                        data={percentExam !== \"\" ? percentExam?.topicsList : []}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </TabPane>\r\n                <TabPane tab=\"Practice statistic\" key=\"2\">\r\n                  <div className=\"statistic-component\">\r\n                    <h2>Practice statistic</h2>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Number of test\"\r\n                          title={percentPractice?.totalPractices}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Highest score\"\r\n                          title={(\r\n                            percentPractice?.maxMark?.maxMark * 100\r\n                          ).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Lowest score\"\r\n                          title={(\r\n                            percentPractice?.minMark?.minMark * 100\r\n                          ).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Average of score\"\r\n                          title={(percentPractice?.avgMark * 100).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                    <ProgressTrackWidget\r\n                      titleProgress={\"Practice progess track\"}\r\n                      data={\r\n                        percentPractice !== \"\"\r\n                          ? percentPractice?.topicsList\r\n                          : []\r\n                      }\r\n                    />\r\n                  </div>\r\n                </TabPane>\r\n                {/* <TabPane tab=\"Mixing Exam Test statistic\" key=\"3\">\r\n                  <div className=\"statistic-component\">\r\n                    <h2>Mixing Exam Test statistic</h2>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Number of test\"\r\n                          title={percentMixingExamTest?.totalExams}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Highest score\"\r\n                          title={(\r\n                            percentMixingExamTest?.maxMark?.maxMark * 100\r\n                          ).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Lowest score\"\r\n                          title={(\r\n                            percentMixingExamTest?.minMark?.minMark * 100\r\n                          ).toFixed(2)}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Col xs={12} sm={6} xl={3} className=\"mb-4\">\r\n                        <CounterWidget\r\n                          category=\"Average of score\"\r\n                          title={(percentMixingExamTest?.avgMark * 100).toFixed(\r\n                            2\r\n                          )}\r\n                          period=\"Feb 1 - Apr 1\"\r\n                          percentage={18.2}\r\n                          icon={faChartLine}\r\n                          iconColor=\"shape-secondary\"\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                    <ProgressTrackWidget\r\n                      titleProgress={\"Mixing exam test progess track\"}\r\n                      data={\r\n                        percentMixingExamTest !== \"\"\r\n                          ? percentMixingExamTest?.topicsList\r\n                          : []\r\n                      }\r\n                    />\r\n                  </div>\r\n                </TabPane> */}\r\n              </Tabs>\r\n\r\n              {/* <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CircleChartWidget title=\"Traffic Share\" data={trafficShares} />\r\n        </Col> */}\r\n            </>\r\n          )}\r\n        </Spin>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OverviewPage;\r\n","// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\n\nCheckCircleFilled.displayName = 'CheckCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"names":["login","data","_post","loginByGoogle","loginByFacebook","register","forgotPass","getTopicStatistic","type","_get","TabPane","Tabs","useState","setExamOverview","historyExam","predictNextResult","percentExam","setPercentExam","percentPractice","setPercentPractice","useEffect","response1","response2","status","exam","topicsList","map","item","index","title","countCorrect","totalCorrect","percentage","totalQuestion","parseInt","toFixed","color","Math","floor","random","toString","total","last","length","console","log","Row","className","spinning","tip","getTimeAndPercentCorrectByID","defaultActiveKey","tab","Col","xs","sm","xl","category","totalExams","period","icon","faChartLine","iconColor","maxMark","minMark","avgMark","titleProgress","totalPractices","CheckCircleFilled","props","ref","React","AntdIcon","_objectSpread","CheckCircleFilledSvg","displayName","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","DEVICE_SIZES","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","concat"],"sourceRoot":""}