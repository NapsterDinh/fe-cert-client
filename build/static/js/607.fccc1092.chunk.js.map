{"version":3,"file":"static/js/607.fccc1092.chunk.js","mappings":"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","sources":["app/core/apis/user.js","app/pages/BasicPage/Login.js","app/pages/BasicPage/ThirdLogin.js"],"sourcesContent":["import { _get, _post, _delete, _put } from \"./apis\";\n\n// APIS\nexport const getAllUsers = (data) => {\n  return _get(\"/api/v1/user\");\n};\n\nexport const login = (data) => {\n  return _post(\"/api/v1/user/login\", data);\n};\n\nexport const loginByGoogle = (data) => {\n  return _post(\"/api/v1/user/google_login\", data);\n};\n\nexport const loginByFacebook = (data) => {\n  return _post(\"/api/v1/user/facebook_login\", data);\n};\n\nexport const register = (data) => {\n  return _post(\"/api/v1/user/register\", data);\n};\n\nexport const logout = (data) => {\n  return _post(\"/api/v1/user/logout\", data);\n};\n\nexport const forgotPass = (data) => {\n  return _post(\"/api/v1/user/forgot-password\", data);\n};\n\nexport const resetPass = (data) => {\n  return _post(\"/api/v1/user/reset-password\", data);\n};\n\nexport const deleteUser = (data) => {\n  return _delete(\"/api/v1/user\");\n};\n\nexport const getTopicStatistic = (type) => {\n  return _get(\"/api/v1/exam/topic/statistic?type=\"+type);\n};\n\n","import {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport signInBg from \"app/assets/img/illustrations/signin.svg\";\r\nimport configuration from \"app/configuration\";\r\nimport { login } from \"app/core/apis/user\";\r\nimport { Routes } from \"app/routes\";\r\nimport { updateUser } from \"app/store/userReducer\";\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport ThirdLogin from \"./ThirdLogin\";\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"Email is required\")\r\n    .email(\"Format must be an e-mail\")\r\n    .trim(),\r\n  password: Yup.string().trim().required(\"Password is required\"),\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const SignIn = async (values, resetForm) => {\r\n    const result = await login({\r\n      email: values.username,\r\n      password: values.password,\r\n    });\r\n\r\n    if (result.status === 200) {\r\n      console.log(result);\r\n      if (result.data?.user?.user?.status === \"inactive\") {\r\n        setError(\"You are blocked by admin. Contact to unblock\");\r\n        resetForm();\r\n      } else {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n\r\n        dispatch(updateUser(result.data));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } else {\r\n      setError(result?.data?.message);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link\r\n              as={Link}\r\n              to={Routes.HomePage.path}\r\n              className=\"text-gray-700\"\r\n            >\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\r\n              homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row\r\n            className=\"justify-content-center form-bg-image\"\r\n            style={{ backgroundImage: `url(${signInBg})` }}\r\n          >\r\n            <Col\r\n              xs={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\r\n                </div>\r\n                <Formik\r\n                  initialValues={{ username: \"\", password: \"\" }}\r\n                  validationSchema={schema}\r\n                  onSubmit={(values, { setSubmitting, resetForm }) =>\r\n                    SignIn(values, resetForm)\r\n                  }\r\n                >\r\n                  {(props) => {\r\n                    const {\r\n                      values,\r\n                      touched,\r\n                      errors,\r\n                      isSubmitting,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                    } = props;\r\n\r\n                    return (\r\n                      <Form\r\n                        className=\"mt-4 basic-form\"\r\n                        noValidate\r\n                        onSubmit={handleSubmit}\r\n                      >\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <span style={{ color: \"red\" }}>{error}</span>\r\n                        </div>\r\n\r\n                        <Form.Group id=\"username\" className=\"mb-4\">\r\n                          <Form.Label>Your Username</Form.Label>\r\n                          <InputGroup\r\n                            className={\r\n                              errors.username && touched.username && \"error\"\r\n                            }\r\n                          >\r\n                            <InputGroup.Text>\r\n                              <FontAwesomeIcon icon={faEnvelope} />\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Username\"\r\n                              value={values.username}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              className={\r\n                                errors.username && touched.username && \"error\"\r\n                              }\r\n                              name=\"username\"\r\n                            />\r\n                          </InputGroup>\r\n                          <ErrorMessage\r\n                            name=\"username\"\r\n                            component=\"div\"\r\n                            className=\"invalid-feedback\"\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Group id=\"password\" className=\"mb-4\">\r\n                            <Form.Label>Your Password</Form.Label>\r\n                            <InputGroup\r\n                              className={\r\n                                errors.password && touched.password && \"error\"\r\n                              }\r\n                            >\r\n                              <InputGroup.Text>\r\n                                <FontAwesomeIcon icon={faUnlockAlt} />\r\n                              </InputGroup.Text>\r\n                              <Form.Control\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={\r\n                                  errors.password && touched.password && \"error\"\r\n                                }\r\n                              />\r\n                            </InputGroup>\r\n                            <ErrorMessage\r\n                              name=\"password\"\r\n                              component=\"div\"\r\n                              className=\"invalid-feedback\"\r\n                            />\r\n                          </Form.Group>\r\n                          <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                            <Card.Link\r\n                              as={Link}\r\n                              to={Routes.ForgotPassword.path}\r\n                              className=\"small text-end\"\r\n                            >\r\n                              Forgot password?\r\n                            </Card.Link>\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"w-100\"\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          Sign in\r\n                        </Button>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n                <ThirdLogin />\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Not registered?\r\n                    <Card.Link\r\n                      as={Link}\r\n                      to={Routes.Register.path}\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {` Create account `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Button } from \"@themesberg/react-bootstrap\";\r\nimport { loginByFacebook, loginByGoogle } from \"app/core/apis/user\";\r\nimport configuration from \"app/configuration\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"app/store/userReducer\";\r\nimport {\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./ThirdLogin.css\";\r\n\r\nconst clientId =\r\n  \"588336887447-h306o0g8rsfr9o2421d749sgk6hu916k.apps.googleusercontent.com\";\r\nconst appId = \"840430540176218\";\r\n\r\nconst ThirdLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const responseFacebook = async (response) => {\r\n    try {\r\n      const result = await loginByFacebook({\r\n        ...response,\r\n        picture: response?.picture?.data?.url,\r\n      });\r\n      if (result.status === 200) {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n        dispatch(updateUser(result.data));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const onSuccess = async (response) => {\r\n    try {\r\n      const result = await loginByGoogle(response);\r\n      if (result.status === 200) {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n        dispatch(updateUser(result.data));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onFailure = (response) => console.log(response);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3 mb-4 text-center\">\r\n        <span className=\"fw-normal\">or login with</span>\r\n      </div>\r\n      <div className=\"my-4\">\r\n        <FacebookLogin\r\n          id=\"buttonFB\"\r\n          appId={appId}\r\n          fields=\"name,email,picture\"\r\n          callback={responseFacebook}\r\n          icon={<FontAwesomeIcon icon={faFacebook} />}\r\n          textButton={\"Continue with Facebook\"}\r\n          className=\"btn-login-fb\"\r\n        />\r\n        <GoogleLogin\r\n          clientId={clientId}\r\n          render={(renderProps) => (\r\n            <Button className=\"socialBtn\" block onClick={renderProps.onClick}>\r\n              {<FontAwesomeIcon icon={faGoogle} />}\r\n              Continue with Google\r\n            </Button>\r\n          )}\r\n          onSuccess={onSuccess}\r\n          onFailure={onFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThirdLogin;\r\n"],"names":["login","data","_post","loginByGoogle","loginByFacebook","register","forgotPass","getTopicStatistic","type","_get","schema","Yup","shape","username","required","email","trim","password","dispatch","useDispatch","history","useHistory","location","useLocation","useState","error","setError","SignIn","values","resetForm","result","status","console","log","user","configuration","tokens","updateUser","undefined","state","push","from","search","message","className","as","Link","to","Routes","icon","faAngleLeft","style","backgroundImage","signInBg","xs","initialValues","validationSchema","onSubmit","setSubmitting","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","noValidate","color","id","faEnvelope","placeholder","value","onChange","onBlur","name","component","faUnlockAlt","variant","disabled","responseFacebook","response","picture","url","onSuccess","appId","fields","callback","faFacebook","textButton","clientId","render","renderProps","Button","block","onClick","faGoogle","onFailure","cookiePolicy"],"sourceRoot":""}