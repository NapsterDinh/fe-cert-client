{"version":3,"file":"static/js/380.d49ac5d4.chunk.js","mappings":"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","sources":["app/core/apis/user.js","app/pages/BasicPage/Register.js","app/pages/BasicPage/ThirdLogin.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js"],"sourcesContent":["import { _get, _post, _delete, _put } from \"./apis\";\n\n// APIS\nexport const getAllUsers = (data) => {\n  return _get(\"/api/v1/user\");\n};\n\nexport const login = (data) => {\n  return _post(\"/api/v1/user/login\", data);\n};\n\nexport const loginByGoogle = (data) => {\n  return _post(\"/api/v1/user/google_login\", data);\n};\n\nexport const loginByFacebook = (data) => {\n  return _post(\"/api/v1/user/facebook_login\", data);\n};\n\nexport const register = (data) => {\n  return _post(\"/api/v1/user/register\", data);\n};\n\nexport const logout = (data) => {\n  return _post(\"/api/v1/user/logout\", data);\n};\n\nexport const forgotPass = (data) => {\n  return _post(\"/api/v1/user/forgot-password\", data);\n};\n\nexport const resetPass = (data) => {\n  return _post(\"/api/v1/user/reset-password\", data);\n};\n\nexport const deleteUser = (data) => {\n  return _delete(\"/api/v1/user\");\n};\n\nexport const getTopicStatistic = (type) => {\n  return _get(\"/api/v1/exam/topic/statistic?type=\"+type);\n};\n\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  FormCheck,\r\n  Container,\r\n  InputGroup,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport { register as registerAPI } from \"app/core/apis/user\";\r\nimport * as yup from \"yup\";\r\nimport ThirdLogin from \"./ThirdLogin\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes } from \"app/routes\";\r\nimport BgImage from \"app/assets/img/illustrations/signin.svg\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { Modal, Alert } from \"antd\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport \"./Register.css\";\r\n// Schema yup\r\nconst schema = yup\r\n  .object()\r\n  .shape({\r\n    fullName: yup\r\n      .string()\r\n      .required(\"Name is required\")\r\n      .min(3, \"Minimum must be greater 3 characters\")\r\n      .matches(\r\n        /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/,\r\n        \"Full name has not contains special characters and number\"\r\n      ),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .email(\"Format must be an e-mail\")\r\n      .matches(\r\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\r\n        \"Email must be correct with format abc@exampl.com\"\r\n      ),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Minimum must be greater 8 characters\")\r\n      .matches(\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\r\n        \"Password has at least 1 uppercase, 1 digit, 1 special character and minimum 8 in length\"\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"You need to confirm password\")\r\n      .oneOf(\r\n        [yup.ref(\"password\"), null],\r\n        \"Confirm password must be matched with password\"\r\n      ),\r\n    agreeTerm: yup\r\n      .boolean()\r\n      .required(\"You need to checked it\")\r\n      .oneOf([true], \"You need to checked it\"),\r\n    // role: yup.string().required(\"You need to choose your role\"),\r\n    role: yup.string(),\r\n  })\r\n  .required();\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [secondsToGo, setSecondsToGo] = useState(5);\r\n  const onRegister = async (values) => {\r\n    try {\r\n      const result = await registerAPI({\r\n        name: values.fullName,\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n\r\n      if (result.status === 201) {\r\n        history.push(\"/emailSent\");\r\n      } else {\r\n        setErrorMsg(result.data.message);\r\n      }\r\n    } catch (error) {console.log(error);}\r\n  };\r\n  // UseForm hook\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({\r\n    defaultValues: {\r\n      fullName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n    const timer = setInterval(() => {\r\n      setSecondsToGo((secondsToGo) => secondsToGo - 1);\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n    }, 5 * 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (secondsToGo === 0) {\r\n      hideModal();\r\n      history.push(\"/\");\r\n    }\r\n  }, [secondsToGo]);\r\n\r\n  const hideModal = () => {\r\n    setVisible(false);\r\n  };\r\n  return (\r\n    <main>\r\n      <Modal\r\n        title=\"Register Successfully\"\r\n        visible={visible}\r\n        onOk={hideModal}\r\n        onCancel={hideModal}\r\n        okText=\"Ok\"\r\n        footer={null}\r\n      >\r\n        <p>Your account has been created.</p>\r\n        <p>\r\n          We just sent to your email an link which contains active account link.{\" \"}\r\n        </p>\r\n        <p>You need to access into that link to verify your email.</p>\r\n        <p>This page will be redirect to Home Page in {secondsToGo} seconds</p>\r\n      </Modal>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link\r\n              as={Link}\r\n              to={Routes.HomePage.path}\r\n              className=\"text-gray-700\"\r\n            >\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\r\n              homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row\r\n            className=\"justify-content-center form-bg-image\"\r\n            style={{ backgroundImage: `url(${BgImage})` }}\r\n          >\r\n            <Col\r\n              xs={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <div className=\"mb-4 mb-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Create an account</h3>\r\n                </div>\r\n                <Form className=\"mt-4\" onSubmit={handleSubmit(onRegister)}>\r\n                  {errorMsg !== \"\" && (\r\n                    <Alert message={errorMsg} type={\"error\"} />\r\n                  )}\r\n                  <Form.Group\r\n                    id=\"name\"\r\n                    className={`mb-4 ${errors.fullName ? \"error\" : \"\"}`}\r\n                  >\r\n                    <Form.Label>Your Name</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Controller\r\n                        name=\"fullName\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                          <Form.Control\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Napster Dinh\"\r\n                            {...field}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.fullName?.message}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    id=\"email\"\r\n                    className={`mb-4 ${errors.email ? \"error\" : \"\"}`}\r\n                  >\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Controller\r\n                        name=\"email\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                          <Form.Control\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"example@company.com\"\r\n                            {...field}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email?.message}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    id=\"password\"\r\n                    className={`mb-4 ${errors.password ? \"error\" : \"\"}`}\r\n                  >\r\n                    <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n\r\n                      <Controller\r\n                        name=\"password\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                          <Form.Control\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            {...field}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password?.message}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    id=\"confirmPassword\"\r\n                    className={`mb-4 ${errors.confirmPassword ? \"error\" : \"\"}`}\r\n                  >\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Controller\r\n                        name=\"confirmPassword\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                          <Form.Control\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            {...field}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.confirmPassword?.message}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <FormCheck\r\n                    type=\"checkbox\"\r\n                    className={`d-flex mb-4 ${errors.agreeTerm ? \"error\" : \"\"}`}\r\n                  >\r\n                    <Controller\r\n                      name=\"agreeTerm\"\r\n                      control={control}\r\n                      render={({ field }) => {\r\n                        const props = {\r\n                          ...field,\r\n                        };\r\n                        delete props.value;\r\n                        return (\r\n                          <>\r\n                            <FormCheck.Input\r\n                              {...props}\r\n                              id=\"terms\"\r\n                              className=\"me-2\"\r\n                            />\r\n                            <FormCheck.Label htmlFor=\"terms\">\r\n                              I agree to the{\" \"}\r\n                              <Card.Link>terms and conditions</Card.Link>\r\n                            </FormCheck.Label>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    />\r\n                  </FormCheck>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.agreeTerm?.message}\r\n                  </Form.Control.Feedback>\r\n\r\n                  <Button\r\n                    disabled={isSubmitting}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"w-100\"\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Already have an account?\r\n                    <Card.Link\r\n                      as={Link}\r\n                      to={Routes.LoginPage.path}\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {` Login here `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Button } from \"@themesberg/react-bootstrap\";\r\nimport { loginByFacebook, loginByGoogle } from \"app/core/apis/user\";\r\nimport configuration from \"app/configuration\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"app/store/userReducer\";\r\nimport {\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./ThirdLogin.css\";\r\n\r\nconst clientId =\r\n  \"588336887447-h306o0g8rsfr9o2421d749sgk6hu916k.apps.googleusercontent.com\";\r\nconst appId = \"840430540176218\";\r\n\r\nconst ThirdLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const responseFacebook = async (response) => {\r\n    try {\r\n      const result = await loginByFacebook({\r\n        ...response,\r\n        picture: response?.picture?.data?.url,\r\n      });\r\n      if (result.status === 200) {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n        dispatch(updateUser(result.data));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const onSuccess = async (response) => {\r\n    try {\r\n      const result = await loginByGoogle(response);\r\n      if (result.status === 200) {\r\n        //set token\r\n        configuration.setApiRequestToken(result.data.tokens);\r\n        dispatch(updateUser(result.data));\r\n        if (location?.state !== undefined) {\r\n          history.push(`${location.state.from}${location.state.search}`);\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onFailure = (response) => console.log(response);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3 mb-4 text-center\">\r\n        <span className=\"fw-normal\">or login with</span>\r\n      </div>\r\n      <div className=\"my-4\">\r\n        <FacebookLogin\r\n          id=\"buttonFB\"\r\n          appId={appId}\r\n          fields=\"name,email,picture\"\r\n          callback={responseFacebook}\r\n          icon={<FontAwesomeIcon icon={faFacebook} />}\r\n          textButton={\"Continue with Facebook\"}\r\n          className=\"btn-login-fb\"\r\n        />\r\n        <GoogleLogin\r\n          clientId={clientId}\r\n          render={(renderProps) => (\r\n            <Button className=\"socialBtn\" block onClick={renderProps.onClick}>\r\n              {<FontAwesomeIcon icon={faGoogle} />}\r\n              Continue with Google\r\n            </Button>\r\n          )}\r\n          onSuccess={onSuccess}\r\n          onFailure={onFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThirdLogin;\r\n","// This icon file is generated automatically.\nvar CloseCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\" } }] }, \"name\": \"close-circle\", \"theme\": \"filled\" };\nexport default CloseCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CloseCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleFilled = function CloseCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleFilledSvg\n  }));\n};\n\nCloseCircleFilled.displayName = 'CloseCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleFilled);","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);"],"names":["login","data","_post","loginByGoogle","loginByFacebook","register","forgotPass","getTopicStatistic","type","_get","schema","yup","shape","fullName","required","min","matches","email","password","confirmPassword","oneOf","agreeTerm","role","history","useHistory","useState","errorMsg","setErrorMsg","visible","setVisible","secondsToGo","onRegister","values","registerAPI","name","result","status","push","message","console","log","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","formState","errors","isSubmitting","useEffect","hideModal","title","onOk","onCancel","okText","footer","className","Container","Card","as","Link","to","Routes","icon","faAngleLeft","Row","style","backgroundImage","BgImage","Col","xs","Form","onSubmit","id","InputGroup","faEnvelope","render","field","placeholder","faUnlockAlt","FormCheck","props","value","htmlFor","Button","disabled","variant","dispatch","useDispatch","location","useLocation","responseFacebook","response","picture","url","configuration","tokens","updateUser","undefined","state","from","search","onSuccess","appId","fields","callback","faFacebook","textButton","clientId","renderProps","block","onClick","faGoogle","onFailure","cookiePolicy","CloseCircleFilled","ref","React","AntdIcon","_objectSpread","CloseCircleFilledSvg","displayName","CloseOutlined","CloseOutlinedSvg"],"sourceRoot":""}